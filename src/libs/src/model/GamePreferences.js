/**
 * fast-cards
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeckMetaData from './DeckMetaData';

/**
 * The GamePreferences model module.
 * @module model/GamePreferences
 * @version 0.2.0
 */
class GamePreferences {
    /**
     * Constructs a new <code>GamePreferences</code>.
     * @alias module:model/GamePreferences
     */
    constructor() { 
        
        GamePreferences.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GamePreferences</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GamePreferences} obj Optional instance to populate.
     * @return {module:model/GamePreferences} The populated <code>GamePreferences</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GamePreferences();

            if (data.hasOwnProperty('deck_preferences')) {
                obj['deck_preferences'] = ApiClient.convertToType(data['deck_preferences'], [DeckMetaData]);
            }
            if (data.hasOwnProperty('points_needed_for_win')) {
                obj['points_needed_for_win'] = ApiClient.convertToType(data['points_needed_for_win'], 'Number');
            }
            if (data.hasOwnProperty('max_round_count')) {
                obj['max_round_count'] = ApiClient.convertToType(data['max_round_count'], 'Number');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/DeckMetaData>} deck_preferences
 */
GamePreferences.prototype['deck_preferences'] = undefined;

/**
 * @member {Number} points_needed_for_win
 * @default 10
 */
GamePreferences.prototype['points_needed_for_win'] = 10;

/**
 * @member {Number} max_round_count
 * @default 15
 */
GamePreferences.prototype['max_round_count'] = 15;

/**
 * @member {String} mode
 * @default 'NORMAL'
 */
GamePreferences.prototype['mode'] = 'NORMAL';






export default GamePreferences;

